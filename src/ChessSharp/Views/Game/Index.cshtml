@using ChessSharp.CoreStuff.Classes
@using Microsoft.AspNetCore.Razor.Parser.Internal
@using Microsoft.AspNetCore.Http
@inject UserManager<ApplicationUser> UserManager
@model Game



<h1>@Model.WhitePlayer.Username vs @Model.BlackPlayer.Username</h1>

<div id="board" style="width: 400px"></div>

<div id="board-system">
    <form id="gameInfo" asp-controller="Game" asp-action="SubmitMove" method="post" class="form-horizontal">
        <input asp-for="GameId" value="@Model.GameId" id="gameId" />
        <input asp-for="FEN" value="@Model.FEN" id="fen" />
        <input asp-for="PGN" value="@Model.PGN" id="pgn" />
        <input asp-for="DrawOffered" id="drawOffered" /> <br />
        <input asp-for="CurrentGameState" id="gameState" value="@Model.CurrentGameState" />
        <input asp-for="BlackPlayerId" value="@Model.BlackPlayerId" />
        <input asp-for="WhitePlayerId" value="@Model.WhitePlayerId" />
        <br/>
        <button class="bg-primary active botuni" id="submit-button" style="visibility:visible" type="submit">Submit</button>
    </form>

    <button class="bg-primary active botuni" id="cancel-button" style="background-color: darkslateblue">Cancel</button>

    @if (Model.CurrentGameState == GameState.STILL_PLAYING)
    {
        <form asp-action="Resign" asp-route-gameId="@Model.GameId.ToString()">
            <button class="bg-primary active botuni" id="resign" asp-action="Resign" style="background-color: red">Resign</button>
        </form>

        if (Model.DrawOffered.Equals(DrawOfferState.NONE))
        {
            <form asp-action="OfferDraw" asp-route-gameId="@Model.GameId.ToString()" asp-route-drawState="@Model.GetRightDrawState((string)ViewData["UserId"])">
                <button class="bg-primary active botuni" id="Offer draw" style="background-color: green">Offer draw</button>
            </form>
        }
        else
        {
            <form asp-action="NoDraw" asp-route-gameId="@Model.GameId.ToString()">
                <button class="bg-primary active botuni" id="Offer draw" style="background-color:darkorange">No draw</button>
            </form>
        }

    }

    <form asp-action="Abort" asp-route-gameId="@Model.GameId.ToString()">
        <button class="bg-primary active botuni" id="Abort" style="background-color: fuchsia">Abort</button>
    </form>

    @if ((@Model.DrawOffered.Equals(DrawOfferState.BLACK_OFFERED) && ViewData["UserId"].Equals(Model.WhitePlayerId)) ||
                        (@Model.DrawOffered.Equals(DrawOfferState.WHITE_OFFERED) && ViewData["UserId"].Equals(Model.BlackPlayerId)))
    {
        <form asp-action="AcceptDraw" asp-route-gameId="@Model.GameId.ToString()">
            <button class="bg-primary active botuni" id="Accept draw" style="background-color: tomato">Accept draw</button>
        </form>
    }

</div>

<div>
    <div>@Model.GetWhoseTurn() to move</div>
    <div>PGN: @Model.PGN</div>
    <div>Draw offered: @Model.GetDrawOfferedState()</div>

    <div>Game state: @Model.GetGameStateScore()</div>


</div>

@section scripts
{
    <script src="~/js/chessboard-0.3.0.min.js"></script>
    <script src="~/js/chessLegal.js"></script>
    <script src="~/js/chess.js"></script>
}

