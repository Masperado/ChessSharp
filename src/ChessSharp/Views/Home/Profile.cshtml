@model ChessSharp.Models.ProfileViewModels.ProfilePageModel

@{
    ViewData["Title"] = "Profile: " + Model.User.Username;
}

<h1>Hello @Model.User.Username!</h1>
<h1>Current Elo: @Math.Round(Model.User.Elo)</h1>

<div class="col-xs-6 my-containers" id="container-profile">
    <div class="col-xs-12 header2">LIST OF ALL USERS</div>
    <div class="col-xs-2 header">USERNAME</div>
    <div class="col-xs-2 header">&nbsp;&nbsp;&nbsp;ELO</div>
    <div class="col-xs-12" style="height: 3px;"></div>
    @foreach (var appUser in Model.Users)
    {
        <div class="col-xs-2" id="username">@appUser.Username</div>
        <div class="col-xs-2" id="elo">&nbsp; &nbsp; &nbsp;@Math.Round(appUser.Elo)</div>
        <div class="col-xs-4">
            <a class="bg-primary active" asp-action="SendRequest" asp-route-SenderId="@Model.User.UserId" asp-route-ReceiverId="@appUser.UserId" asp-route-ColorRequest="white">Send request as white</a>
        </div>
        <div class="col-xs-4">
            <a class="bg-primary active" asp-action="SendRequest" asp-route-SenderId="@Model.User.UserId" asp-route-ReceiverId="@appUser.UserId" asp-route-ColorRequest="black">Send request as black</a>
        </div>
        <div class="col-xs-12" style="height: 6px;"></div>
    }
</div>

<div class="col-xs-6 my-containers" id="container-pendingrequests">
    <div class="col-xs-12 header2">PENDING REQUESTS</div>
    <div class="col-xs-4 header">REQUEST</div>
    <div class="col-xs-4 header">TIME SENT</div>
    <div class="col-xs-12" style="height: 3px;"></div>
    @foreach (var request in Model.PendingRequests)
    {
        <div class="col-xs-4" id="senderUsername">@request.Sender.Username wants to play as @request.ColorRequest.ToString() </div>
        <div class="col-xs-4" id="time-sent">@request.TimeSent</div>
        <div class="col-xs-2"><a class="bg-primary active" asp-action="AcceptRequest" asp-route-RequestId="@request.RequestId">Accept</a>
        </div>
        <div class="col-xs-2"><a class="btn-danger" asp-action="DeclineRequest" asp-route-RequestId="@request.RequestId">Decline</a>
        </div>
        <div class="col-xs-12" style="height: 3px;"></div>
    }
</div>
<div class="col-xs-4 my-containers second-row" id="container-sentrequests">
    <div class="col-xs-12 header2">SENT REQUESTS</div>
    <div class="col-xs-6 header">REQUEST</div>
    <div class="col-xs-4 header">TIMESENT</div>
    <div class="col-xs-12" style="height: 6px;"></div>
    @foreach (var request in Model.SentRequests)
    {
        <div class="col-xs-6" id="senderUsername">You want to play @request.Reciever.Username as @request.ColorRequest.ToString()</div>
        <div class="col-xs-4" id="time-sent">@request.TimeSent</div>
        <div class="col-xs-2"><a class="btn-danger" asp-action="DeclineRequest" asp-route-RequestId="@request.RequestId">Cancel request</a>
        </div>
        <div class="col-xs-12" style="height: 6px;"></div>
    }
</div>


<div class="col-xs-4 my-containers second-row" id="container-games">
    <div class="col-xs-12 header2">ACTIVE GAMES</div>
    <div class="col-xs-4 header">WHITE</div>
    <div class="col-xs-4 header">BLACK</div>
    <div class="col-xs-2 header">MOVE</div>
    <div class="col-xs-12" style="height: 6px;"></div>
    
    @foreach (var game in Model.Games.Where(g => g.CurrentGameState == GameState.STILL_PLAYING && g.GetPlayerOnTurnId() == Model.User.UserId))
    {   
        <div class="col-xs-4" id="whitePlayer" style="color:lightblue">@game.WhitePlayer.Username</div>
        <div class="col-xs-4" id="blackPlayer" style="color: lightblue;">@game.BlackPlayer.Username</div>
        <div class="col-xs-2" id="move" style="color: lightblue;">@game.FEN.ToCharArray()[game.FEN.Length - 1]</div>
        <div class="col-xs-2">
            <a class="bg-primary active" asp-controller="Game" asp-action="Index" asp-route-gameId="@game.GameId.ToString()">Play</a>
        </div>
        <div class="col-xs-12" style="height: 6px;"></div>
    }
    
    @foreach (var game in Model.Games.Where(g => g.CurrentGameState == GameState.STILL_PLAYING && g.GetPlayerOnTurnId() != Model.User.UserId))
    {
        <div class="col-xs-4" id="whitePlayer">@game.WhitePlayer.Username</div>
        <div class="col-xs-4" id="blackPlayer">@game.BlackPlayer.Username</div>
        <div class="col-xs-2" id="move">@game.FEN.ToCharArray()[game.FEN.Length - 1]</div>
        <div class="col-xs-2"><a class="bg-primary active" asp-controller="Game" asp-action="Index" asp-route-gameId="@game.GameId.ToString()">Play</a>
        </div>
        <div class="col-xs-12" style="height: 6px;"></div>
    }
</div>

<div class="col-xs-4 my-containers second-row" id="container-fingames">
    <div class="col-xs-12 header2">FINISHED GAMES</div>
    <div class="col-xs-4 header">WHITE</div>
    <div class="col-xs-4 header">BLACK</div>
    <div class="col-xs-2 header">RESULT</div>
    <div class="col-xs-12" style="height: 6px;"></div>

    @foreach (var game in Model.Games.Where(g => g.CurrentGameState != GameState.STILL_PLAYING))
    {
        <div class="col-xs-4" id="whitePlayer">@game.WhitePlayer.Username</div>
        <div class="col-xs-4" id="blackPlayer">@game.BlackPlayer.Username</div>
        <div class="col-xs-2" style="font-size: 0.55vw" id="result">@game.GetGameStateScore()</div>
        <div class="col-xs-2">
            <a class="bg-primary active" asp-controller="Game" asp-action="Index" asp-route-gameId="@game.GameId.ToString()">View</a>
        </div>
        <div class="col-xs-12" style="height: 6px;"></div>
    }
</div>





